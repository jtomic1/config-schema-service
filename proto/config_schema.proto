syntax = "proto3";

option go_package = "proto/";

package configschema;

import "google/protobuf/timestamp.proto";

service ConfigSchemaService {
  rpc SaveConfigSchema(SaveConfigSchemaRequest) returns (SaveConfigSchemaResponse);
  rpc GetConfigSchema(GetConfigSchemaRequest) returns (GetConfigSchemaResponse);
  rpc DeleteConfigSchema(DeleteConfigSchemaRequest) returns (DeleteConfigSchemaResponse);
  rpc ValidateConfiguration(ValidateConfigurationRequest) returns (ValidateConfigurationResponse);
}

message User {
  string username = 1;
  string email = 2;
}

message ConfigSchemaDetails {
  string namespace = 1;
  string schema_name = 2;
  string version = 3;
}

message ConfigSchemaData {
  User user = 1;
  string schema = 2;
  google.protobuf.Timestamp creationTime = 3;
}

message SaveConfigSchemaRequest {
  User user = 1;
  ConfigSchemaDetails schemaDetails = 2;
  string schema = 3;
}

message SaveConfigSchemaResponse {
  int32 status = 1;
  string message = 2;
}

message DeleteConfigSchemaRequest { 
  User user = 1;
  ConfigSchemaDetails schemaDetails = 2;
}

message DeleteConfigSchemaResponse {
  int32 status = 1;
  string message = 2;
}

message GetConfigSchemaRequest {
  User user = 1;
  ConfigSchemaDetails schemaDetails = 2;
}

message GetConfigSchemaResponse  {
  int32 status = 1;
  string message = 2;
  ConfigSchemaData schemaData = 3;
}

message ValidateConfigurationRequest {
  User user = 1;
  ConfigSchemaDetails schemaDetails  = 2;
  string configuration = 3;
}

message ValidateConfigurationResponse {
  int32 status = 1;
  string message = 2;
  bool is_valid = 3;
}